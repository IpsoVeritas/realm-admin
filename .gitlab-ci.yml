image: gcr.io/brickchain-docker/gitlab-builder-base:alpine

stages:
  - render
  - build
  - tag
  - deploy

render:
  image: node:9
  stage: render
  script:
    - npm install
    - ./node_modules/.bin/ng build --prod --bh ./
  artifacts:
      paths:
      - dist
      - bindata.go
      when: always

deploy to branch:
  image: gcr.io/brickchain-docker/gitlab-builder-deploy
  stage: deploy
  script:
    - eval $(vaultenv read -s secret/env/gitlab-ci/brickchain-actions-s3)
    - cat config.json.template |envsubst >dist/config.json
    - aws s3 cp --recursive dist/ s3://brickchain-actions/$CI_PROJECT_NAME/$CI_BUILD_REF_NAME
    - aws s3 cp --content-type 'application/json' --acl public-read s3://brickchain-actions/$CI_PROJECT_NAME/$CI_BUILD_REF_NAME/config.json s3://brickchain-actions/$CI_PROJECT_NAME/$CI_BUILD_REF_NAME/config.json --metadata-directive REPLACE
    - aws configure set preview.cloudfront true
    - aws cloudfront create-invalidation --distribution-id E2Y3HN6RJX8DF5 --paths "/$CI_PROJECT_NAME/$CI_BUILD_REF_NAME/*"
  variables:
    SRVFEED: "https://firebasestorage.googleapis.com/v0/b/integrity-autobinder-staging.appspot.com/o/services.json?alt=media"
    PROXY: "https://proxy.svc-staging.plusintegrity.com"

deploy to staging:
  image: gcr.io/brickchain-docker/gitlab-builder-deploy
  stage: deploy
  only:
    - master
  script:
    - eval $(vaultenv read -s secret/env/gitlab-ci/brickchain-actions-s3)
    - cat config.json.template |envsubst >dist/config.json
    - aws s3 cp --recursive dist/ s3://brickchain-actions/$CI_PROJECT_NAME/staging
    - aws s3 cp --content-type 'application/json' --acl public-read s3://brickchain-actions/$CI_PROJECT_NAME/staging/config.json s3://brickchain-actions/$CI_PROJECT_NAME/staging/config.json --metadata-directive REPLACE
    - aws configure set preview.cloudfront true
    - aws cloudfront create-invalidation --distribution-id E2Y3HN6RJX8DF5 --paths "/$CI_PROJECT_NAME/staging/*"
  variables:
    SRVFEED: "https://firebasestorage.googleapis.com/v0/b/integrity-autobinder-staging.appspot.com/o/services.json?alt=media"
    PROXY: "https://proxy.svc-staging.plusintegrity.com"
  environment:
    name: staging
    url: "https://actions.brickchain.com/realm-admin-ng/master/"

deploy to production:
  image: gcr.io/brickchain-docker/gitlab-builder-deploy
  stage: deploy
  when: manual
  only:
    - master
  script:
    - eval $(vaultenv read -s secret/env/gitlab-ci/brickchain-actions-s3)
    - cat config.json.template |envsubst >dist/config.json
    - aws s3 cp --recursive dist/ s3://brickchain-actions/$CI_PROJECT_NAME/release
    - aws s3 cp --content-type 'application/json' --acl public-read s3://brickchain-actions/$CI_PROJECT_NAME/release/config.json s3://brickchain-actions/$CI_PROJECT_NAME/release/config.json --metadata-directive REPLACE
    - aws configure set preview.cloudfront true
    - aws cloudfront create-invalidation --distribution-id E2Y3HN6RJX8DF5 --paths "/$CI_PROJECT_NAME/release/*"
  variables:
    SRVFEED: "https://firebasestorage.googleapis.com/v0/b/integrity-autobinder.appspot.com/o/services.json?alt=media"
    PROXY: "https://proxy.svc.integrity.app"
  environment:
    name: production
    url: "https://admin.integrity.app/"
